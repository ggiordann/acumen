// NODE SERVER.JS
// RUN INDEX.HTML USING LIVE SERVER EXTENSION

import express from 'express';
import cors from 'cors';
import bodyParser from 'body-parser';
import OpenAI from 'openai';
import dotenv from 'dotenv';
import { postListing } from './fbMarketplacePoster.js';
dotenv.config();

const app = express();
const port = 5500;

// increased sigma size limt
app.use(bodyParser.json({ limit: '25mb' }));
app.use(bodyParser.urlencoded({ limit: '25mb', extended: true }));

app.use(cors());
app.use(express.json());

// configure openai
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// endpoint to analyze an image
app.post('/analyze', async (req, res) => {
  const { imageData } = req.body;
  try {
    const response = await openai.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: [
        {
          role: 'user',
          content: [
            { type: 'text', text: 
              
              `
              Write a facebook marketplace Advertisement based on the product in the image.

              DO NOT USE ANY EMOJIS IN THE LISTING
              Fill it out in JSON format with the following fields:
              Title - should be a short, descriptive title for the listing.
              Price - should be a price estimate for the product, one value in AUD. If you're not sure, just provide an estimate anyway.
              Category - should be a category for the product. 
              
              Choose the most suitable category out of the following:

              ["Tools", "Furniture", "Household", "Garden", "Appliances", 
              "Video Games", "Books, Films & Music",
              "Bags & Luggage", "Women's clothing & shoes", "Men's clothing & shoes", "Jewellery and accessories",
              "Health & Beauty", "Pet supplies", "Baby & children", "Toys and games",
              "Electronics & computers", "Mobile phones",
              "Bicycles", "Arts & crafts", "Sports and outdoors", "Car parts", "Musical Instruments", "Antiques and collectibles",
              "Garage sale", "Miscellaneous", "Vehicles"]

              Condition - should be the condition of the product. Choose one of the following:

              ["New", "Used - like new", "Used - good", "Used - fair"]

              Brand - should be the brand of the product, if applicable. If you're not sure, just leave it blank.

              Description - should be a detailed description of the product. At the end, include the following text:
              "Generated by Acumen (acumen.ai)"

              Availability - should be the availability of the product. Choose one of the following:

              ["List as single item", "List as in stock"]

              Product Tags - should be a list of tags for the product.

              Meetup Preferences - should be a list of meetup preferences for the product. Choose one of the following:

              ["Public meetup", "Door pick-up", "Door drop-off"]

              Hide from friends - should be a boolean value. If true, the listing should be hidden from friends.

              `},
            { type: 'image_url', image_url: { url: `data:image/jpeg;base64,${imageData}` } }
          ]
        }
      ],
      max_tokens: 300
    });

    const answer = response.choices[0].message.content;
    res.json({ response: answer });
  } catch (error) {
    console.error('error analyzing image:', error);
    res.status(500).json({ error: 'error analyzing image' });
  }
});

// endpoint to post a facebook marketplace listing
app.post('/post-facebook', async (req, res) => {
  // get title, category, description, and imagePath from request body
  const { title, category, description, imagePath } = req.body;
  try {
    const result = await postListing({ title, category, description, imagePath });
    res.json({ success: result });
  } catch (error) {
    console.error('error posting facebook listing:', error);
    res.status(500).json({ error: error.toString() });
  }
});

app.listen(port, () => {
  console.log(`server listening on port ${port}`);
});